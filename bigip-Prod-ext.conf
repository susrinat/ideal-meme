#TMSH-VERSION: 11.6.2

ltm node /vmc-prod/10.58.17.10 {
    address 10.58.17.10
}
ltm node /vmc-prod/10.58.17.11 {
    address 10.58.17.11
}
ltm node /vmc-prod/10.58.17.12 {
    address 10.58.17.12
}
ltm node /vmc-prod/10.58.17.13 {
    address 10.58.17.13
}
ltm node /vmc-prod/10.58.17.35 {
    address 10.58.17.35
}
ltm node /vmc-prod/10.58.17.36 {
    address 10.58.17.36
}
ltm node /vmc-prod/10.58.20.24 {
    address 10.58.20.24
    monitor min 1 of { /vmc-prod/ldap-prod-monitor-color1 /vmc-prod/ldap-prod-monitor-name1 /vmc-prod/ldap-prod-monitor-planet1 }
}
ltm node /vmc-prod/10.58.20.25 {
    address 10.58.20.25
    monitor min 1 of { /vmc-prod/ldap-prod-monitor-color2 /vmc-prod/ldap-prod-monitor-name2 /vmc-prod/ldap-prod-monitor-planet2 }
}
ltm node /vmc-prod/10.58.20.26 {
    address 10.58.20.26
}
ltm node /vmc-prod/10.58.20.27 {
    address 10.58.20.27
}
ltm node /vmc-prod/10.58.20.28 {
    address 10.58.20.28
}
ltm node /vmc-prod/10.58.20.29 {
    address 10.58.20.29
}
ltm node /vmc-prod/10.58.20.68 {
    address 10.58.20.68
}
ltm node /vmc-prod/10.58.21.24 {
    address 10.58.21.24
}
ltm node /vmc-prod/10.58.21.25 {
    address 10.58.21.25
}
ltm node /vmc-prod/10.58.21.33 {
    address 10.58.21.33
}
ltm node /vmc-prod/10.58.21.34 {
    address 10.58.21.34
}
ltm node /vmc-prod/192.168.104.25 {
    address 192.168.104.25
}
ltm node /vmc-prod/192.168.105.10 {
    address 192.168.105.10
}
ltm pool /vmc-prod/cp-prd-radius-pool-1812 {
    members {
        /vmc-prod/10.58.20.68:1812 {
            address 10.58.20.68
        }
    }
    monitor /Common/udp 
}
ltm pool /vmc-prod/cp-prd-radius-pool-1813 {
    members {
        /vmc-prod/10.58.20.68:1813 {
            address 10.58.20.68
        }
    }
    monitor /Common/gateway_icmp 
}
ltm pool /vmc-prod/ext-jira-prd-vmc-pool {
    members {
        /vmc-prod/10.58.21.24:8080 {
            address 10.58.21.24
        }
        /vmc-prod/10.58.21.25:8080 {
            address 10.58.21.25
        }
    }
    monitor /vmc-prod/ext-jira-prd-vmc-http 
}
ltm pool /vmc-prod/infoblox-aws-pool {
    members {
        /vmc-prod/192.168.104.25:443 {
            address 192.168.104.25
        }
    }
    monitor /Common/tcp 
}
ltm pool /vmc-prod/vmc-ad-pool-389 {
    members {
        /vmc-prod/10.58.20.24:389 {
            address 10.58.20.24
        }
        /vmc-prod/10.58.20.25:389 {
            address 10.58.20.25
        }
    }
    monitor /Common/tcp 
}
ltm pool /vmc-prod/vmc-ad-pool-636 {
    members {
        /vmc-prod/10.58.20.24:636 {
            address 10.58.20.24
        }
        /vmc-prod/10.58.20.25:636 {
            address 10.58.20.25
        }
    }
    monitor /Common/tcp 
}
ltm pool /vmc-prod/vmc-ad-pool-3268 {
    members {
        /vmc-prod/10.58.20.24:3268 {
            address 10.58.20.24
        }
        /vmc-prod/10.58.20.25:3268 {
            address 10.58.20.25
        }
    }
    monitor /Common/tcp 
}
ltm pool /vmc-prod/vmc-ad-pool-3269 {
    members {
        /vmc-prod/10.58.20.24:3269 {
            address 10.58.20.24
        }
        /vmc-prod/10.58.20.25:3269 {
            address 10.58.20.25
        }
    }
    monitor /Common/tcp 
}
ltm pool /vmc-prod/vmworld-prod-pool {
    members {
        /vmc-prod/10.58.17.10:80 {
            address 10.58.17.10
        }
        /vmc-prod/10.58.17.11:80 {
            address 10.58.17.11
        }
        /vmc-prod/10.58.17.12:80 {
            address 10.58.17.12
        }
        /vmc-prod/10.58.17.13:80 {
            address 10.58.17.13
        }
    }
    monitor /vmc-prod/vmworld-prod-monitor and /vmc-prod/vmworld-prod-monitor-2 
}
ltm pool /vmc-prod/w-prod5-pool {
    members {
        /vmc-prod/10.58.17.35:80 {
            address 10.58.17.35
        }
        /vmc-prod/10.58.17.36:80 {
            address 10.58.17.36
        }
    }
    monitor /vmc-prod/w-prod5-int-monitor-http 
}
ltm pool /vmc-prod/ws-prod-ext-pool {
    members {
        /vmc-prod/10.58.20.27:443 {
            address 10.58.20.27
        }
        /vmc-prod/10.58.20.29:443 {
            address 10.58.20.29
        }
    }
    monitor /vmc-prod/ws-prod-monitor-new-ssl 
}
ltm pool /vmc-prod/ws-prod-pool {
    members {
        /vmc-prod/10.58.20.26:443 {
            address 10.58.20.26
        }
        /vmc-prod/10.58.20.28:443 {
            address 10.58.20.28
        }
    }
    monitor /vmc-prod/ws-prod-monitor-new-ssl 
}
ltm rule /vmc-prod/General_maextenance_page {
    when HTTP_REQUEST {
        if { [active_members [LB::server pool]] < 1 } {
                HTTP::redirect "https://www.vmware.com/site_maextenance.html"
        }
    }
}
ltm rule /vmc-prod/General_maintenance_page {
    when HTTP_REQUEST {
        if { [active_members [LB::server pool]] < 1 } {
                HTTP::redirect "https://www.vmware.com/site_maintenance.html"
        }
    }
}
ltm rule /vmc-prod/HTTP-traffic-reject-Rule {
    when HTTP_REQUEST {
switch -glob [HTTP::host] {
        "vcsa.vmware.com" {
     reject
    }
    default {
      # do nothing
}}
}
}
ltm rule /vmc-prod/X-Forwarded-Port {
    when HTTP_REQUEST {
HTTP::header insert X-Forwarded-Port [TCP::local_port clientside]
}
}
ltm rule /vmc-prod/X-Forwarded-Port_Proto-https {
    when HTTP_REQUEST {
HTTP::header insert X-Forwarded-Port [TCP::local_port clientside]
HTTP::header insert X-Forwarded-Proto "https"
}
}
ltm rule /vmc-prod/X-Forwarded-Proto-https {
    when HTTP_REQUEST {
HTTP::header insert X-Forwarded-Proto "https"
}
}
ltm rule /vmc-prod/amsprod-redirect {
    when HTTP_REQUEST {
 if { [HTTP::host] equals "ams.vmware.com" } {
     HTTP::redirect "https://[HTTP::host][HTTP::uri]"
}
}
}
ltm rule /vmc-prod/changepointprod-redirect {
    when HTTP_REQUEST {
 if { [HTTP::host] equals "ext-changepoint.vmware.com" } {
     HTTP::redirect "https://[HTTP::host][HTTP::uri]"
}
}
}
ltm rule /vmc-prod/http-https-redirect-www-int-ext-vips {
    when HTTP_REQUEST {
   if { [class match [HTTP::host] contains redirect-url-db] } {
      HTTP::redirect https://[HTTP::host][HTTP::uri]
   }
}
}
ltm rule /vmc-prod/infoblox-dnsaas-irule-new {
    when HTTP_REQUEST {

if { [ active_members infoblox-aws-pool ] < 1 } {
     HTTP::respond 503 content "Go to Azure Site"
     return
     }

#### Keeping request lenght to collect the payload for POST JSON request parameters

   set username [HTTP::username]
   set h_method [HTTP::method]

   if {[HTTP::method] equals "POST"} {
     set content_length 0
     if { [HTTP::header exists "Content-Length"] } {
         if { [HTTP::header "Content-Length"] > 1048000 }{
            HTTP::respond 403
            return
         } else {
          set content_length [HTTP::header "Content-Length"]
         }
      } else {
      HTTP::respond 403
      return
   }
   if { $content_length > 0 } {
      HTTP::collect $content_length
      set payload_collect true
      }
   }
   set postval [ class match -value $username equals user_list_POST ]

######################looking for GET request##############

   if { [HTTP::method] equals "GET"} {
      set uri [HTTP::uri]
      set fields [ split $uri "=" ]
      set query_param [lindex $fields 1]
      log local0. " request uri for get is $query_param"
      set value [ class match -value $username equals user_list_GET ]
      log local0. " domains for this user are $value"
      if { $value ne "" } {
         set x [ split $value ":" ]
		 set getrec none
         log local0. "split value is $x"
         for {set i 0} { $i < [llength $x]}{incr i} {
              set domrec [lindex $x $i]
              log local0. " this time record is $domrec"
              if { $query_param ends_with $domrec} { set getrec $domrec }
         }
         if { $getrec ne "none" } { log local0. "$username allowed for $getrec"} else {
            HTTP::respond 200 content {<html><head><title>Domain Unavailable</title></head><body>Zone File does not exist.</body></html>}
         }
      }
      else {
          HTTP::respond 200 content {<html><head><title>Unauthorized</title></head><body>User is not authorized for GET action</body></html>}
      }
   }

######################looking for DELETE request#####

   if { [HTTP::method] equals "DELETE"} {
      set uri_delete [HTTP::uri]
      set delrec [split $uri_delete "/"]
      set value1 [ class match -value $username equals user_list_DELETE ]
      if { $value1 ne ""} { 
         set value2 [split $value1 ":"]
		 set uri_delrec none
            for {set i 0} { $i < [llength $value2]}{incr i} {
               set delrec1 [lindex $value2 $i ]
               for {set j 0} { $j < [llength $delrec]}{incr j} {
                  set delrec2 [lindex $delrec $j]
                  if { $delrec2 ends_with $delrec1 } {
                     log local0. " domain match found in api call"
                     set uri_delrec $delrec2
                  }
               }
           }
           if {$uri_delrec equals "none"} { 
              HTTP::respond 200 content {<html><head><title>Unathorized Access</title></head><body>User is not allowed to delete this record.</body></html>}
           }
       } else {
          HTTP::respond 200 content {<html><head><title>Unauthorized</title></head><body>User is not authorized for DELETE action</body></html>}
       }
   }

###############looking for update request############

   if { [HTTP::method] equals "PUT"} {
      set uri_update [HTTP::uri]
      set updtrec [split $uri_update "/"]
      set value1 [ class match -value $username equals user_list_PUT ]
      if { $value1 ne ""} { 
         set value2 [split $value1 ":"]
            for {set i 0} { $i < [llength $value2]}{incr i} {
               set domrec1 [lindex $value2 $i ]
               for {set j 0} { $j < [llength $updtrec]}{incr j} {
                  set domrec2 [lindex $updtrec $j]
                  if { $domrec2 ends_with $domrec1 } {
                     log local0. " domain match found in api call"
                     set uri_updtrec $domrec2
                  }
               }
           }
           if {$uri_updtrec equals ""} { 
              HTTP::respond 200 content {<html><head><title>Unauthorized</title></head><body>User is not authorized for PUT action</body></html>}
           }
       } else {
          HTTP::respond 200 content {<html><head><title>Unauthorized</title></head><body>User is not authorized for this action</body></html>}
       }
   }
}


when HTTP_REQUEST_DATA {
   if { $payload_collect } { 
      set payload [HTTP::payload]
      log local0. "$payload"

##########parsing json to find name record for domain###########

      set records [split $payload ","]
      for {set i 0} { $i < [llength $records]}{incr i} {
         set rec [lindex $records $i]
         #log local0. "record is $rec"
         if { $rec contains "name"} { set namefield $rec}
      }
      log local0. "name field is $namefield"
      set x [ split $namefield ":" ]
      set postdom [lindex $x 1]
      set y [string trim $postdom "\""]
      log local0. "final domain is $y"

#####################
 
      if { $postval ne "" } {
         set postrec [split $postval ":"]
		 set z none
         for {set i 0} { $i < [llength $postrec]}{incr i} {
            set x [lindex $postrec $i]
            if { $y ends_with $x} { set z $x }
            }
            if { $z ne "none"} {log local0. "$username allowed for POST"} else {
               HTTP::respond 200 content {<html><head><title>Domain Unavailable</title></head><body>Zone file do no exist.</body></html>}
            }
        } else { 
           HTTP::respond 200 content {<html><head><title>Unauthorized</title></head><body>User is not authorized for POST action</body></html>} 
        }
   }
}
}
ltm rule /vmc-prod/insert-X-Forwarded-Proto-https {
    when HTTP_REQUEST { HTTP::header insert X-Forwarded-Proto https }
}
ltm rule /vmc-prod/insert-X-Forwarded-Proto-https-and-is-ssl {
    when HTTP_REQUEST {
HTTP::header insert IS_SSL "ssl"
HTTP::header insert X-Forwarded-Proto https
}
}
ltm rule /vmc-prod/ip-logger-irule-hsl-w-prod5-ext-vip {
    when CLIENT_ACCEPTED {
set hsl [HSL::open -proto UDP -pool syslog-server-pool]

}

when HTTP_REQUEST {
set x [HTTP::header value Referer]
set y [HTTP::header value Host]
}
when SERVER_CONNECTED {
HSL::send $hsl "<190>IP hitting w-prod5-ext-vip is: [IP::client_addr]:[TCP::client_port] -- bigip connected from [IP::local_addr]:[TCP::local_port serverside] to pool member [IP::server_addr]:[TCP::server_port] - HOST is $y and  Referer is $x"
}
}
ltm rule /vmc-prod/irule-developercenter-scm-service {
    when HTTP_REQUEST {
        if { [HTTP::host] eq "developercenter.vmware.com" and [HTTP::uri] starts_with "/scm-service" } {
                        HTTP::redirect "https://[HTTP::host][HTTP::uri]"
                }
}
}
ltm rule /vmc-prod/lqeprod-redirect {
    when HTTP_REQUEST {
 if { [HTTP::host] equals "lqe.vmware.com" } {
     HTTP::redirect "https://[HTTP::host][HTTP::uri]"
}
}
}
ltm rule /vmc-prod/tcp_stats_AD_logr-389 {
    when SERVER_CONNECTED {
    log 10.113.160.29 local0.info "client: [IP::client_addr]:[TCP::client_port] -> VIP: [clientside {IP::local_addr}]:[clientside {TCP::local_port}] -> Node: [IP::server_addr]:[TCP::server_port]"
    log 10.113.162.91:518 local0.info "ad-account-login-track-vmc-389 client: [IP::client_addr]:[TCP::client_port] -> VIP: [clientside {IP::local_addr}]:[clientside {TCP::local_port}] from bigip [IP::local_addr]:[TCP::local_port serverside] -> Node: [IP::server_addr]:[TCP::server_port]"
    log 10.113.164.21:514 local0.info "ad-account-login-track-vmc-389 client: [IP::client_addr]:[TCP::client_port] -> VIP: [clientside {IP::local_addr}]:[clientside {TCP::local_port}] from bigip [IP::local_addr]:[TCP::local_port serverside] -> Node: [IP::server_addr]:[TCP::server_port]"
}
}
ltm rule /vmc-prod/tcp_stats_AD_logr-636 {
    when SERVER_CONNECTED {
    log 10.113.160.29 local0.info "client: [IP::client_addr]:[TCP::client_port] -> VIP: [clientside {IP::local_addr}]:[clientside {TCP::local_port}] -> Node: [IP::server_addr]:[TCP::server_port]"
    log 10.113.162.91:518 local0.info "ad-account-login-track-vmc-636 client: [IP::client_addr]:[TCP::client_port] -> VIP: [clientside {IP::local_addr}]:[clientside {TCP::local_port}] from bigip [IP::local_addr]:[TCP::local_port serverside] -> Node: [IP::server_addr]:[TCP::server_port]"
    log 10.113.164.21:514 local0.info "ad-account-login-track-vmc-636 client: [IP::client_addr]:[TCP::client_port] -> VIP: [clientside {IP::local_addr}]:[clientside {TCP::local_port}] from bigip [IP::local_addr]:[TCP::local_port serverside] -> Node: [IP::server_addr]:[TCP::server_port]"
}
}
ltm rule /vmc-prod/tcp_stats_AD_logr-3268 {
    when SERVER_CONNECTED {
    log 10.113.160.29 local0.info "client: [IP::client_addr]:[TCP::client_port] -> VIP: [clientside {IP::local_addr}]:[clientside {TCP::local_port}] -> Node: [IP::server_addr]:[TCP::server_port]"
    log 10.113.162.91:518 local0.info "ad-account-login-track-vmc-3268 client: [IP::client_addr]:[TCP::client_port] -> VIP: [clientside {IP::local_addr}]:[clientside {TCP::local_port}] from bigip [IP::local_addr]:[TCP::local_port serverside] -> Node: [IP::server_addr]:[TCP::server_port]"
    log 10.113.164.21:514 local0.info "ad-account-login-track-vmc-3268 client: [IP::client_addr]:[TCP::client_port] -> VIP: [clientside {IP::local_addr}]:[clientside {TCP::local_port}] from bigip [IP::local_addr]:[TCP::local_port serverside] -> Node: [IP::server_addr]:[TCP::server_port]"
}
}
ltm rule /vmc-prod/tcp_stats_AD_logr-3269 {
    when SERVER_CONNECTED {
    log 10.113.160.29 local0.info "client: [IP::client_addr]:[TCP::client_port] -> VIP: [clientside {IP::local_addr}]:[clientside {TCP::local_port}] -> Node: [IP::server_addr]:[TCP::server_port]"
    log 10.113.162.91:518 local0.info "ad-account-login-track-vmc-3269 client: [IP::client_addr]:[TCP::client_port] -> VIP: [clientside {IP::local_addr}]:[clientside {TCP::local_port}] from bigip [IP::local_addr]:[TCP::local_port serverside] -> Node: [IP::server_addr]:[TCP::server_port]"
    log 10.113.164.21:514 local0.info "ad-account-login-track-vmc-3269 client: [IP::client_addr]:[TCP::client_port] -> VIP: [clientside {IP::local_addr}]:[clientside {TCP::local_port}] from bigip [IP::local_addr]:[TCP::local_port serverside] -> Node: [IP::server_addr]:[TCP::server_port]"
}
}
ltm rule /vmc-prod/vmc-infoblox-authrule {
    when HTTP_REQUEST {
    # Keeping request lenght to collect the payload for POST JSON request parameters

    set username [HTTP::username]
    set h_method [HTTP::method]

   if {[HTTP::method] equals "POST"} {

        set content_length 0
        if { [HTTP::header exists "Content-Length"] } {
            if { [HTTP::header "Content-Length"] > 1048000 }{

                HTTP::respond 403
                return
            } else { 
                set content_length [HTTP::header "Content-Length"]
            }
        } else {
            HTTP::respond 403
            return
        }

        if { $content_length > 0 } {
            HTTP::collect $content_length
            set payload_collect true
        }
    }


    set postval [ class match -value $username equals user_list_POST ]



######################looking for GET request##############
if { [HTTP::method] equals "GET"} {

set uri [HTTP::uri]
set fields [ split $uri "=" ]
set query_param [lindex $fields 1]
log local0. " request uri for get is $query_param"

    set value [ class match -value $username equals user_list_GET ]
    log local0. " domains for this user are $value"
    if 	{ $value ne "" } {
    set x [ split $value ":" ]
    log local0. "split value is $x"
    for {set i 0} { $i < [llength $x]}{incr i} {
	set domrec [lindex $x $i]
        log local0. " this time record is $domrec"
       if { $query_param ends_with $domrec} { set getrec $domrec }
    }
	if { $getrec ne "" } { log local0. "$username allowed for $getrec"} else {reject}
	} else {reject}

}
######################looking for DELETE request#####
if { [HTTP::method] equals "DELETE"} {
  set uri_delete [HTTP::uri]

  set delrec [split $uri_delete "/"]
  set value1 [ class match -value $username equals user_list_DELETE ]

if { $value1 ne ""} {  
set value2 [split $value1 ":"]
for {set i 0} { $i < [llength $value2]}{incr i} {
set delrec1 [lindex $value2 $i ]
for {set j 0} { $j < [llength $delrec]}{incr j} {
set delrec2 [lindex $delrec $j]
if { $delrec2 ends_with $delrec1 } {
log local0. " domain match found in api call" 
set uri_delrec $delrec2
}
}
} 
if {$uri_delrec equals ""} { reject}
} else {reject}
}
###############looking for update request############
if { [HTTP::method] equals "PUT"} {
  set uri_update [HTTP::uri]

  set updtrec [split $uri_update "/"]
  set value1 [ class match -value $username equals user_list_PUT ]

if { $value1 ne ""} {  
set value2 [split $value1 ":"]
for {set i 0} { $i < [llength $value2]}{incr i} {
set domrec1 [lindex $value2 $i ]
for {set j 0} { $j < [llength $updtrec]}{incr j} {
set domrec2 [lindex $updtrec $j]
if { $domrec2 ends_with $domrec1 } {
log local0. " domain match found in api call" 
set uri_updtrec $domrec2
}
}
} 
if {$uri_updtrec equals ""} { reject}
} else {reject}
}


}



when HTTP_REQUEST_DATA {

if { $payload_collect } {  
        set payload [HTTP::payload]
log local0. "$payload"
##########parsing json to find name record for domain###########
set records [split $payload ","]

for {set i 0} { $i < [llength $records]}{incr i} {
set rec [lindex $records $i]
#log local0. "record is $rec"
if { $rec contains "name"} { set namefield $rec}
}
log local0. "name field is $namefield"
set x [ split $namefield ":" ]
set postdom [lindex $x 1]
set y [string trim $postdom "\""]
log local0. "final domain is $y"
#####################

if { $postval ne "" } { 
set postrec [split $postval ":"]
for {set i 0} { $i < [llength $postrec]}{incr i} {
set x [lindex $postrec $i]
if { $y ends_with $x} { set z $x }
}
if { $z ne ""} {log local0. "$username allowed for POST"} else {reject} 
} else { reject }
}
}
}
ltm rule /vmc-prod/vmc-vmworld-prod-vip-3_HTTPs_redirect-rule {
    when HTTP_REQUEST {
 switch -glob [string tolower [HTTP::host][HTTP::uri]] {
  "www.vmworld.com/*" {
    HTTP::redirect https://[getfield [HTTP::host] ":" 1][HTTP::uri]
  }
  default {
  #do nothing
  }
}
}
}
ltm rule /vmc-prod/vmworld-prod-maintenance-rule {
    when HTTP_REQUEST {
	if { [active_members [LB::server pool]] < 1 } {
		HTTP::redirect "http://www.vmware.com/webmaint/vmworld_maintenance.html"
	}
}
}
ltm rule /vmc-prod/w-prod-vip_HTTPs_redirect-Rule {
    when HTTP_REQUEST {
 switch -glob [string tolower [HTTP::host][HTTP::uri]] {
  "mblogs.vmware.com/*" {
    HTTP::redirect https://[getfield [HTTP::host] ":" 1][HTTP::uri]
  }
  "code.vmware.com/*" {
    HTTP::redirect https://[getfield [HTTP::host] ":" 1][HTTP::uri]
  }
  "socialselling.vmware.com/*" {
    HTTP::redirect https://[getfield [HTTP::host] ":" 1][HTTP::uri]
  }
  "itoutcomes.vmware.com/*" {
    HTTP::redirect https://[getfield [HTTP::host] ":" 1][HTTP::uri]
  }
  "colt-solutiondelivery.vmware.com/*" {
    HTTP::redirect https://[getfield [HTTP::host] ":" 1][HTTP::uri]
  }
  "helpnowplus.vmware.com/*" {
    HTTP::redirect https://[getfield [HTTP::host] ":" 1][HTTP::uri]
  }
  "help.vmware.com/*" {
    HTTP::redirect https://[getfield [HTTP::host] ":" 1][HTTP::uri]
  }
  "octo.vmware.com/*" {
    HTTP::redirect https://[getfield [HTTP::host] ":" 1][HTTP::uri]
  }
  "lqeprd-rd.vmware.com/*" {
    HTTP::redirect https://[getfield [HTTP::host] ":" 1][HTTP::uri]
  }

  default {
  #do nothing
  }
}
}
}
ltm snat-translation /vmc-prod/10.58.16.33 {
    address 10.58.16.33
    inherited-traffic-group true
    traffic-group /Common/traffic-group-1
}
ltm snat-translation /vmc-prod/10.58.17.33 {
    address 10.58.17.33
    arp disabled
    disabled
    inherited-traffic-group true
    traffic-group /Common/traffic-group-1
}
ltm snat-translation /vmc-prod/10.58.17.34 {
    address 10.58.17.34
    inherited-traffic-group true
    traffic-group /Common/traffic-group-1
}
ltm snatpool /vmc-prod/SNAT-W-External-Production {
    members {
        /vmc-prod/10.58.17.33
    }
}
ltm snatpool /vmc-prod/SNAT-W-Internal-Production {
    members {
        /vmc-prod/10.58.17.34
    }
}
ltm snatpool /vmc-prod/vmworld-prod-int-snat-pool {
    members {
        /vmc-prod/10.58.16.33
    }
}
ltm virtual /vmc-prod/cp-prd-vmc-radius-vip-1812 {
    destination /vmc-prod/10.58.20.69:1812
    ip-protocol tcp
    mask 255.255.255.255
    pool /vmc-prod/cp-prd-radius-pool-1812
    profiles {
        /Common/fastL4 { }
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/cp-prd-vmc-radius-vip-1813 {
    destination /vmc-prod/10.58.20.69:1813
    ip-protocol tcp
    mask 255.255.255.255
    pool /vmc-prod/cp-prd-radius-pool-1813
    profiles {
        /Common/fastL4 { }
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/ext-jira-vmc-vip {
    destination /vmc-prod/10.58.19.87:80
    ip-protocol tcp
    mask 255.255.255.255
    profiles {
        /Common/http { }
        /Common/tcp { }
    }
    rules {
        /Common/_sys_https_redirect
    }
    source 0.0.0.0/0
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/ext-jira-vmc-vip-SSL {
    destination /vmc-prod/10.58.19.87:443
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /Common/cookie {
            default yes
        }
    }
    pool /vmc-prod/ext-jira-prd-vmc-pool
    profiles {
        /Common/tcp { }
        /vmc-prod/ext-jira-prd-vmc-clientssl {
            context clientside
        }
        /vmc-prod/ext-jira-prd-vmc-profile-http { }
    }
    rules {
        /vmc-prod/X-Forwarded-Port_Proto-https
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/infoblox-aws-vip {
    destination /vmc-prod/192.168.105.10:443
    ip-protocol tcp
    mask 255.255.255.255
    pool /vmc-prod/infoblox-aws-pool
    profiles {
        /Common/clientssl_dnsapi {
            context clientside
        }
        /Common/http { }
        /Common/serverssl {
            context serverside
        }
        /Common/tcp { }
    }
    rules {
        /vmc-prod/infoblox-dnsaas-irule-new
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/ore-vmc-ad-vip-389 {
    destination /vmc-prod/10.58.20.40:389
    ip-protocol tcp
    mask 255.255.255.255
    pool /vmc-prod/vmc-ad-pool-389
    profiles {
        /Common/fastL4 { }
    }
    rules {
        /vmc-prod/tcp_stats_AD_logr-389
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/ore-vmc-ad-vip-636 {
    destination /vmc-prod/10.58.20.40:636
    ip-protocol tcp
    mask 255.255.255.255
    pool /vmc-prod/vmc-ad-pool-636
    profiles {
        /Common/fastL4 { }
    }
    rules {
        /vmc-prod/tcp_stats_AD_logr-636
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/ore-vmc-ad-vip-3268 {
    destination /vmc-prod/10.58.20.40:3268
    ip-protocol tcp
    mask 255.255.255.255
    pool /vmc-prod/vmc-ad-pool-3268
    profiles {
        /Common/fastL4 { }
    }
    rules {
        /vmc-prod/tcp_stats_AD_logr-3268
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/ore-vmc-ad-vip-3269 {
    destination /vmc-prod/10.58.20.40:3269
    ip-protocol tcp
    mask 255.255.255.255
    pool /vmc-prod/vmc-ad-pool-3269
    profiles {
        /Common/fastL4 { }
    }
    rules {
        /vmc-prod/tcp_stats_AD_logr-3269
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/vmworld-prod-int-vip-2-ssl {
    destination /vmc-prod/10.58.16.32:443
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /vmc-prod/vmc-vmworld-cookie {
            default yes
        }
    }
    pool /vmc-prod/vmworld-prod-pool
    profiles {
        /Common/tcp { }
        /vmc-prod/vmworld-prod-clientssl {
            context clientside
        }
        /vmc-prod/vmworld-vmc-prod-http-profile { }
    }
    rules {
        /vmc-prod/insert-X-Forwarded-Proto-https
        /vmc-prod/vmworld-prod-maintenance-rule
    }
    source 0.0.0.0/0
    source-address-translation {
        pool /vmc-prod/vmworld-prod-int-snat-pool
        type snat
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/vmworld-prod-vip-2-ssl {
    destination /vmc-prod/10.58.16.21:443
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /vmc-prod/vmc-vmworld-cookie {
            default yes
        }
    }
    pool /vmc-prod/vmworld-prod-pool
    profiles {
        /Common/oneconnect { }
        /Common/tcp { }
        /vmc-prod/vmworld-prod-clientssl {
            context clientside
        }
        /vmc-prod/vmworld-vmc-prod-http-profile { }
    }
    rules {
        /vmc-prod/insert-X-Forwarded-Proto-https
        /vmc-prod/vmworld-prod-maintenance-rule
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/vmworld-prod-vmc-int-vip-2 {
    destination /vmc-prod/10.58.16.32:80
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /vmc-prod/vmc-vmworld-cookie {
            default yes
        }
    }
    pool /vmc-prod/vmworld-prod-pool
    profiles {
        /Common/tcp { }
        /vmc-prod/vmworld-vmc-prod-http-profile { }
    }
    rules {
        /vmc-prod/vmc-vmworld-prod-vip-3_HTTPs_redirect-rule
    }
    source 0.0.0.0/0
    source-address-translation {
        pool /vmc-prod/vmworld-prod-int-snat-pool
        type snat
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/vmworld-prod-vmc-vip-2 {
    destination /vmc-prod/10.58.16.21:80
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /vmc-prod/vmc-vmworld-cookie {
            default yes
        }
    }
    pool /vmc-prod/vmworld-prod-pool
    profiles {
        /Common/tcp { }
        /vmc-prod/vmworld-vmc-prod-http-profile { }
    }
    rules {
        /vmc-prod/vmc-vmworld-prod-vip-3_HTTPs_redirect-rule
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/w-prod5-ext-vip {
    destination /vmc-prod/10.58.17.33:80
    ip-protocol tcp
    mask 255.255.255.255
    mirror enabled
    pool /vmc-prod/w-prod5-pool
    profiles {
        /Common/http { }
        /Common/tcp { }
    }
    rules {
        /vmc-prod/w-prod-vip_HTTPs_redirect-Rule
        /vmc-prod/irule-developercenter-scm-service
        /vmc-prod/amsprod-redirect
        /vmc-prod/lqeprod-redirect
        /vmc-prod/changepointprod-redirect
        /vmc-prod/HTTP-traffic-reject-Rule
        /vmc-prod/http-https-redirect-www-int-ext-vips
    }
    source 0.0.0.0/0
    source-address-translation {
        pool /vmc-prod/SNAT-W-External-Production
        type snat
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/w-prod5-ext-vip-https {
    destination /vmc-prod/10.58.17.33:443
    ip-protocol tcp
    mask 255.255.255.255
    pool /vmc-prod/w-prod5-pool
    profiles {
        /Common/star-vmware-2018-clientssl {
            context clientside
        }
        /Common/tcp { }
        /vmc-prod/X-Forwarded-For { }
    }
    rules {
        /vmc-prod/insert-X-Forwarded-Proto-https-and-is-ssl
    }
    source 0.0.0.0/0
    source-address-translation {
        pool /vmc-prod/SNAT-W-External-Production
        type snat
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/w-prod5-int-vip {
    destination /vmc-prod/10.58.17.34:80
    ip-protocol tcp
    mask 255.255.255.255
    mirror enabled
    pool /vmc-prod/w-prod5-pool
    profiles {
        /Common/tcp { }
        /vmc-prod/X-Forwarded-For { }
    }
    rules {
        /vmc-prod/w-prod-vip_HTTPs_redirect-Rule
        /vmc-prod/irule-developercenter-scm-service
        /vmc-prod/HTTP-traffic-reject-Rule
        /vmc-prod/http-https-redirect-www-int-ext-vips
    }
    source 0.0.0.0/0
    source-address-translation {
        pool /vmc-prod/SNAT-W-Internal-Production
        type snat
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/w-prod5-int-vip-https {
    destination /vmc-prod/10.58.17.34:443
    ip-protocol tcp
    mask 255.255.255.255
    pool /vmc-prod/w-prod5-pool
    profiles {
        /Common/star-vmware-2018-clientssl {
            context clientside
        }
        /Common/tcp { }
        /vmc-prod/X-Forwarded-For { }
    }
    rules {
        /vmc-prod/insert-X-Forwarded-Proto-https-and-is-ssl
    }
    source 0.0.0.0/0
    source-address-translation {
        pool /vmc-prod/SNAT-W-Internal-Production
        type snat
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/ws-vmc-prod-ext-vip {
    destination /vmc-prod/10.58.20.42:443
    ip-protocol tcp
    mask 255.255.255.255
    pool /vmc-prod/ws-prod-pool
    profiles {
        /Common/celextssl-ws-vmc-prod-ext-vip {
            context clientside
        }
        /Common/http { }
        /Common/serverssl-ws-vmc-prod-ext-vip {
            context serverside
        }
        /vmc-prod/epm-tcp { }
    }
    rules {
        /vmc-prod/General_maextenance_page
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /vmc-prod/ws-vmc-prod-int-vip {
    destination /vmc-prod/10.58.20.41:443
    ip-protocol tcp
    mask 255.255.255.255
    pool /vmc-prod/ws-prod-pool
    profiles {
        /Common/celintssl-ws-vmc-prod-int-vip {
            context clientside
        }
        /Common/http { }
        /Common/serverssl-ws-vmc-prod-int-vip {
            context serverside
        }
        /vmc-prod/epm-tcp { }
    }
    rules {
        /vmc-prod/General_maintenance_page
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual-address /vmc-prod/10.58.16.14 {
    address 10.58.16.14
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/10.58.16.21 {
    address 10.58.16.21
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/10.58.16.32 {
    address 10.58.16.32
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/10.58.16.87 {
    address 10.58.16.87
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/10.58.17.33 {
    address 10.58.17.33
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/10.58.17.34 {
    address 10.58.17.34
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/10.58.18.140 {
    address 10.58.18.140
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/10.58.19.87 {
    address 10.58.19.87
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/10.58.20.40 {
    address 10.58.20.40
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/10.58.20.41 {
    address 10.58.20.41
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/10.58.20.42 {
    address 10.58.20.42
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/10.58.20.69 {
    address 10.58.20.69
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/10.58.21.22 {
    address 10.58.21.22
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/10.58.24.87 {
    address 10.58.24.87
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /vmc-prod/192.168.105.10 {
    address 192.168.105.10
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm data-group internal /vmc-prod/VALID_DOMAINS {
    records {
        dnsaas.vmware.com { }
        dnsapi.vmware.com { }
        skyscraper.vmware.com { }
    }
    type string
}
ltm data-group internal /vmc-prod/redirect-url-db {
    records {
        benefits.vmware.com { }
        blogs.vmware.com { }
    }
    type string
}
ltm data-group internal /vmc-prod/user_list_DELETE {
    records {
        monapi {
            data skyscraper.vmware.com:dnsaas.vmware.com
        }
        vmcapi {
            data skyscraper.vmware.com:dnsaas.vmware.com
        }
    }
    type string
}
ltm data-group internal /vmc-prod/user_list_GET {
    records {
        monapi {
            data skyscraper.vmware.com:dnsaas.vmware.com
        }
        vmcapi {
            data skyscraper.vmware.com:dnsaas.vmware.com
        }
    }
    type string
}
ltm data-group internal /vmc-prod/user_list_POST {
    records {
        monapi {
            data skyscraper.vmware.com:dnsaas.vmware.com
        }
        vmcapi {
            data skyscraper.vmware.com:dnsaas.vmware.com
        }
    }
    type string
}
ltm data-group internal /vmc-prod/user_list_PUT {
    records {
        monapi {
            data skyscraper.vmware.com:dnsaas.vmware.com
        }
        vmcapi {
            data skyscraper.vmware.com:dnsaas.vmware.com
        }
    }
    type string
}
ltm monitor http /vmc-prod/ext-jira-prd-vmc-http {
    adaptive disabled
    defaults-from /Common/http
    destination *:*
    interval 5
    ip-dscp 0
    recv "RUNNING|MAINTENANCE|STARTING"
    recv-disable none
    send "GET /status\r\n"
    time-until-up 0
    timeout 16
}
ltm monitor http /vmc-prod/saplvm-monitor {
    adaptive disabled
    defaults-from /Common/http
    destination *:*
    interval 5
    ip-dscp 0
    recv Content-Type
    recv-disable none
    send "GET /startPage\r\n"
    time-until-up 0
    timeout 16
}
ltm monitor http /vmc-prod/vmworld-prod-monitor {
    adaptive disabled
    defaults-from /Common/http
    destination *:*
    interval 5
    ip-dscp 0
    recv success
    recv-disable none
    send "GET /load-balancer-check/ruok.html HTTP/1.1\r\nHost: load-balancer\r\n\r\n"
    time-until-up 0
    timeout 16
}
ltm monitor http /vmc-prod/vmworld-prod-monitor-2 {
    adaptive disabled
    defaults-from /Common/http
    destination *:*
    interval 5
    ip-dscp 0
    recv VMworld
    recv-disable none
    send "GET /en/index.html\r\n"
    time-until-up 0
    timeout 16
}
ltm monitor http /vmc-prod/w-prod5-int-monitor-http {
    adaptive disabled
    defaults-from /Common/http
    destination *:*
    interval 30
    ip-dscp 0
    recv none
    recv-disable none
    send "GET /load-balancer-monitor/ruok.html HTTP/1.1\r\nHost: load-balancer-monitor\r\nConnection: Close\r\n\r\n"
    time-until-up 0
    timeout 45
}
ltm monitor https /vmc-prod/http-test {
    adaptive disabled
    cipherlist DEFAULT:+SHA:+3DES:+kEDH
    compatibility enabled
    defaults-from /Common/https
    destination *:*
    interval 5
    ip-dscp 0
    recv unknown
    recv-disable none
    send "GET /\r\n"
    time-until-up 0
    timeout 16
}
ltm monitor https /vmc-prod/infoblox-aws {
    adaptive disabled
    cipherlist DEFAULT:+SHA:+3DES:+kEDH
    compatibility enabled
    defaults-from /Common/https
    destination *:*
    interval 5
    ip-dscp 0
    recv REFRESH
    recv-disable none
    send "GET /\r\n"
    time-until-up 0
    timeout 16
}
ltm monitor https /vmc-prod/ws-prod-monitor-new-ssl {
    adaptive disabled
    cipherlist DEFAULT:+SHA:+3DES:+kEDH
    compatibility enabled
    defaults-from /Common/https
    destination *:*
    interval 5
    ip-dscp 0
    recv "Server OK"
    recv-disable none
    send "GET /1/index.html\r\n"
    time-until-up 0
    timeout 16
}
ltm monitor ldap /vmc-prod/ldap-prod-monitor-color1 {
    base DC=vmware,DC=com
    chase-referrals yes
    debug no
    defaults-from /Common/ldap
    destination *:3268
    filter CN=Users
    interval 5
    mandatory-attributes no
    password $M$Gi$OG9Ryri1I3ZIgGFCXaPlL5mqYPJmOLMkRRfLaNtMc2o=
    time-until-up 0
    timeout 16
    username VIOLET
}
ltm monitor ldap /vmc-prod/ldap-prod-monitor-color2 {
    base DC=vmware,DC=com
    chase-referrals yes
    debug no
    defaults-from /Common/ldap
    destination *:3268
    filter CN=Users
    interval 5
    mandatory-attributes no
    password $M$et$DlyE95OVLEjOSnDJ4dP71kWhVPPTWPcilkCJcBWJXFo=
    time-until-up 0
    timeout 16
    username INDIGO
}
ltm monitor ldap /vmc-prod/ldap-prod-monitor-name1 {
    base DC=vmware,DC=com
    chase-referrals yes
    debug no
    defaults-from /Common/ldap
    destination *:3268
    filter CN=Users
    interval 5
    mandatory-attributes no
    password $M$Xc$PmdsamPJL07e0kGMGDdEp+NfWUpdfqrkoGG2DAXI4rQ=
    time-until-up 0
    timeout 16
    username AKBAR
}
ltm monitor ldap /vmc-prod/ldap-prod-monitor-name2 {
    base DC=vmware,DC=com
    chase-referrals yes
    debug no
    defaults-from /Common/ldap
    destination *:3268
    filter CN=Users
    interval 5
    mandatory-attributes no
    password $M$e8$RTLvT3bWdUWJktbsu+gFGCPn7l2Gi4PMVW0wu/Ettx0=
    time-until-up 0
    timeout 16
    username BIRBAL
}
ltm monitor ldap /vmc-prod/ldap-prod-monitor-planet1 {
    base DC=vmware,DC=com
    chase-referrals yes
    debug no
    defaults-from /Common/ldap
    destination *:3268
    filter CN=Users
    interval 5
    mandatory-attributes no
    password $M$qz$eCnj5acErP6sCuXGo5CUBVb2cs34YrhXJPZPg30rjjE=
    time-until-up 0
    timeout 16
    username PLUTO
}
ltm monitor ldap /vmc-prod/ldap-prod-monitor-planet2 {
    base DC=vmware,DC=com
    chase-referrals yes
    debug no
    defaults-from /Common/ldap
    destination *:3268
    filter CN=Users
    interval 5
    mandatory-attributes no
    password $M$ZW$ljBGB4pjBiD+4GDJUShfwAjiIkMb77RCDU0MKuPsOQk=
    time-until-up 0
    timeout 16
    username NEPTUNE
}
ltm monitor tcp /vmc-prod/jira-prod-vmc-ext-monitor-3306 {
    adaptive disabled
    defaults-from /Common/tcp
    destination *:3306
    interval 5
    ip-dscp 0
    recv none
    recv-disable none
    send none
    time-until-up 0
    timeout 16
}
ltm persistence cookie /vmc-prod/vmc-vmworld-cookie {
    app-service none
    cookie-name vmworld-cookie
    defaults-from /Common/cookie
}
ltm profile client-ssl /vmc-prod/clientssl-starvmware {
    alert-timeout 10
    allow-non-ssl disabled
    app-service none
    cache-size 262144
    cache-timeout 3600
    cert /Common/star-vmware-2018.crt
    cert-key-chain {
        star-vmware-2018_Digicert-2018 {
            cert /Common/star-vmware-2018.crt
            chain /Common/Digicert-2018.crt
            key /Common/star-vmware-2018.key
        }
    }
    chain /Common/Digicert-2018.crt
    ciphers DEFAULT
    defaults-from /Common/clientssl
    generic-alert enabled
    handshake-timeout 10
    inherit-certkeychain false
    key /Common/star-vmware-2018.key
    max-renegotiations-per-minute 5
    mod-ssl-methods disabled
    mode enabled
    options { dont-insert-empty-fragments }
    passphrase none
    peer-no-renegotiate-timeout 10
    proxy-ssl disabled
    proxy-ssl-passthrough disabled
    renegotiate-max-record-delay indefinite
    renegotiate-period indefinite
    renegotiate-size indefinite
    renegotiation enabled
    secure-renegotiation require
    server-name none
    session-mirroring disabled
    session-ticket disabled
    sni-default false
    sni-require false
    ssl-sign-hash any
    strict-resume disabled
    unclean-shutdown enabled
}
ltm profile client-ssl /vmc-prod/ext-jira-prd-vmc-clientssl {
    app-service none
    cert /vmc-prod/jira-prod-vmc-cert.crt
    cert-key-chain {
        jira-prod-vmc-cert_jira-prod-vmc-bundle {
            cert /vmc-prod/jira-prod-vmc-cert.crt
            chain /vmc-prod/jira-prod-vmc-bundle.crt
            key /vmc-prod/jira-prod-vmc-cert.key
        }
    }
    chain /vmc-prod/jira-prod-vmc-bundle.crt
    defaults-from /Common/clientssl
    inherit-certkeychain false
    key /vmc-prod/jira-prod-vmc-cert.key
    passphrase none
}
ltm profile client-ssl /vmc-prod/vmworld-prod-clientssl {
    app-service none
    cert /vmc-prod/vmworld-2018.crt
    cert-key-chain {
        vmworld-2018_vmworld-ca-2018 {
            cert /vmc-prod/vmworld-2018.crt
            chain /vmc-prod/vmworld-ca-2018.crt
            key /vmc-prod/vmworld-2018.key
        }
    }
    chain /vmc-prod/vmworld-ca-2018.crt
    defaults-from /Common/clientssl
    inherit-certkeychain false
    key /vmc-prod/vmworld-2018.key
    passphrase none
}
ltm profile client-ssl /vmc-prod/w-prod5-ext-clientssl {
    app-service none
    cert /vmc-prod/star-vmware-2018.crt
    cert-key-chain {
        star-vmware-2018_Digicert-2018 {
            cert /vmc-prod/star-vmware-2018.crt
            chain /vmc-prod/Digicert-2018.crt
            key /vmc-prod/star-vmware-2018.key
        }
    }
    chain /vmc-prod/Digicert-2018.crt
    defaults-from /Common/clientssl
    inherit-certkeychain false
    key /vmc-prod/star-vmware-2018.key
    passphrase none
}
ltm profile client-ssl /vmc-prod/w-prod5-int-clientssl {
    app-service none
    cert /vmc-prod/star-vmware-2018.crt
    cert-key-chain {
        star-vmware-2018_Digicert-2018 {
            cert /vmc-prod/star-vmware-2018.crt
            chain /vmc-prod/Digicert-2018.crt
            key /vmc-prod/star-vmware-2018.key
        }
    }
    chain /vmc-prod/Digicert-2018.crt
    defaults-from /Common/clientssl
    inherit-certkeychain false
    key /vmc-prod/star-vmware-2018.key
    passphrase none
}
ltm profile http /vmc-prod/X-Forwarded-For {
    app-service none
    defaults-from /Common/http
    fallback-host none
    insert-xforwarded-for enabled
    proxy-type reverse
}
ltm profile http /vmc-prod/ext-jira-prd-vmc-profile-http {
    app-service none
    defaults-from /Common/http
    insert-xforwarded-for enabled
    proxy-type reverse
}
ltm profile http /vmc-prod/vmc-vmworld-prod-vip-2-maintenanance-page {
    app-service none
    defaults-from /Common/http
    encrypt-cookies { vmworld-cookie }
    fallback-host http://www.vmware.com/webmaint/vmworld_maintenance.html
    insert-xforwarded-for enabled
    proxy-type reverse
}
ltm profile http /vmc-prod/vmworld-vmc-prod-http-profile {
    app-service none
    defaults-from /Common/http
    encrypt-cookies { vmworld-cookie }
    insert-xforwarded-for enabled
    proxy-type reverse
}
ltm profile tcp /vmc-prod/epm-tcp {
    app-service none
    defaults-from /Common/tcp
    idle-timeout 900
}
sys file ssl-cert /vmc-prod/Digicert-2018.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:Digicert-2018.crt_60715_1
    revision 1
}
sys file ssl-cert /vmc-prod/clientssl-starvmware.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:clientssl-starvmware.crt_38578_1
    revision 1
}
sys file ssl-cert /vmc-prod/jira-prod-cert-new.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:jira-prod-cert-new.crt_41446_1
    revision 1
}
sys file ssl-cert /vmc-prod/jira-prod-vmc-bundle.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:jira-prod-vmc-bundle.crt_41401_1
    revision 1
}
sys file ssl-cert /vmc-prod/jira-prod-vmc-cert.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:jira-prod-vmc-cert.crt_41397_1
    revision 1
}
sys file ssl-cert /vmc-prod/star-vmware-2018.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:star-vmware-2018.crt_60711_1
    revision 1
}
sys file ssl-cert /vmc-prod/vmworld-2018.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:vmworld-2018.crt_38969_1
    revision 1
}
sys file ssl-cert /vmc-prod/vmworld-ca-2018.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:vmworld-ca-2018.crt_38977_1
    revision 1
}
sys file ssl-cert /vmc-prod/vmworld-ca.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:vmworld-ca.crt_38943_1
    revision 1
}
sys file ssl-cert /vmc-prod/vmworld-cert.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:vmworld-cert.crt_38935_1
    revision 1
}
sys file ssl-cert /vmc-prod/w-prod-ext-bundle.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:w-prod-ext-bundle.crt_41819_1
    revision 1
}
sys file ssl-cert /vmc-prod/w-prod-ext-cert.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:w-prod-ext-cert.crt_41815_1
    revision 1
}
sys file ssl-cert /vmc-prod/w-prod-int-bundle.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:w-prod-int-bundle.crt_41042_1
    revision 1
}
sys file ssl-cert /vmc-prod/w-prod-int-cert.crt {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_d/:vmc-prod:w-prod-int-cert.crt_41034_1
    revision 1
}
sys file ssl-key /vmc-prod/clientssl-starvmware.key {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_key_d/:vmc-prod:clientssl-starvmware.key_38582_1
    revision 1
}
sys file ssl-key /vmc-prod/jira-prod-cert-new.key {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_key_d/:vmc-prod:jira-prod-cert-new.key_41442_1
    revision 1
}
sys file ssl-key /vmc-prod/jira-prod-vmc-cert.key {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_key_d/:vmc-prod:jira-prod-vmc-cert.key_41393_1
    revision 1
}
sys file ssl-key /vmc-prod/star-vmware-2018.key {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_key_d/:vmc-prod:star-vmware-2018.key_60707_1
    revision 1
}
sys file ssl-key /vmc-prod/vmworld-2018.key {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_key_d/:vmc-prod:vmworld-2018.key_38973_1
    revision 1
}
sys file ssl-key /vmc-prod/vmworld-key.key {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_key_d/:vmc-prod:vmworld-key.key_38939_1
    revision 1
}
sys file ssl-key /vmc-prod/w-prod-ext-cert.key {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_key_d/:vmc-prod:w-prod-ext-cert.key_41811_1
    revision 1
}
sys file ssl-key /vmc-prod/w-prod-int-cert.key {
    cache-path /config/filestore/files_d/vmc-prod_d/certificate_key_d/:vmc-prod:w-prod-int-cert.key_41038_1
    revision 1
}
